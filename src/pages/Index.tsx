import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Switch } from '@/components/ui/switch';
import { Progress } from '@/components/ui/progress';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [likes, setLikes] = useState<{ [key: string]: boolean }>({});
  const [activeTab, setActiveTab] = useState('discover');

  const toggleLike = (profileId: string) => {
    setLikes(prev => ({
      ...prev,
      [profileId]: !prev[profileId]
    }));
  };

  const profiles = [
    {
      id: '1',
      name: '–ê–ª–µ–∫—Å',
      age: 25,
      bio: '–õ—é–±–ª—é –∫–æ—Ñ–µ, –∫–Ω–∏–≥–∏ –∏ –¥–æ–ª–≥–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ –≥–æ—Ä–æ–¥—É ‚òïüìö',
      location: '–ú–æ—Å–∫–≤–∞',
      interests: ['–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–ú—É–∑—ã–∫–∞', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'],
      verified: true,
      online: true
    },
    {
      id: '2', 
      name: '–°—ç–º',
      age: 28,
      bio: '–§–æ—Ç–æ–≥—Ä–∞—Ñ –∏ –ª—é–±–∏—Ç–µ–ª—å –ø—Ä–∏—Ä–æ–¥—ã üì∏üåø',
      location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      interests: ['–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–ü—Ä–∏—Ä–æ–¥–∞', '–ô–æ–≥–∞'],
      verified: true,
      online: false
    },
    {
      id: '3',
      name: '–†—ç–π',
      age: 24,
      bio: '–¢–∞–Ω—Ü—É—é, –≥–æ—Ç–æ–≤–ª—é, –º–µ—á—Ç–∞—é üíÉüç≥‚ú®',
      location: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', 
      interests: ['–¢–∞–Ω—Ü—ã', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–¢–µ–∞—Ç—Ä'],
      verified: false,
      online: true
    }
  ];

  const events = [
    {
      id: '1',
      title: '–õ–ì–ë–¢+ –∫–∏–Ω–æ–ø–æ–∫–∞–∑',
      date: '15 –∞–≤–≥—É—Å—Ç–∞',
      time: '19:00',
      location: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
      attendees: 42,
      type: '–∫—É–ª—å—Ç—É—Ä–∞'
    },
    {
      id: '2',
      title: '–ü—Ä–∞–π–¥-–ø–∏–∫–Ω–∏–∫ –≤ –ø–∞—Ä–∫–µ',
      date: '20 –∞–≤–≥—É—Å—Ç–∞',
      time: '14:00', 
      location: '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ',
      attendees: 128,
      type: '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
    },
    {
      id: '3',
      title: '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –≤—Å—Ç—Ä–µ—á–∞',
      date: '25 –∞–≤–≥—É—Å—Ç–∞',
      time: '18:30',
      location: '–ê—Ä—Ç-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ "–§–ª–∞–∫–æ–Ω"',
      attendees: 35,
      type: '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
    }
  ];

  const matches = [
    { id: '1', name: '–ê–ª–µ–∫—Å', avatar: 'üåü', mutualLikes: true },
    { id: '2', name: '–î–∂–æ—Ä–¥–∞–Ω', avatar: 'üé®', mutualLikes: true },
    { id: '3', name: '–ö–µ–π—Å–∏', avatar: 'üåà', mutualLikes: false }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/5 via-secondary/5 to-accent/5">
      {/* Header */}
      <header className="sticky top-0 z-50 bg-white/90 backdrop-blur-lg border-b border-border/50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-gradient-to-r from-primary to-secondary rounded-lg flex items-center justify-center">
                <Icon name="Heart" size={20} className="text-white" />
              </div>
              <h1 className="text-xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
                Connect & Love
              </h1>
            </div>
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="sm">
                <Icon name="MessageCircle" size={20} />
              </Button>
              <Button variant="ghost" size="sm">
                <Icon name="Bell" size={20} />
              </Button>
              <Avatar className="w-8 h-8">
                <AvatarFallback className="bg-primary text-white">–Ø</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
      </header>

      {/* Navigation */}
      <div className="container mx-auto px-4 py-6">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-4 bg-white/70 backdrop-blur">
            <TabsTrigger value="discover" className="flex items-center space-x-2">
              <Icon name="Users" size={16} />
              <span>–ü–æ–∏—Å–∫</span>
            </TabsTrigger>
            <TabsTrigger value="matches" className="flex items-center space-x-2">
              <Icon name="Heart" size={16} />
              <span>–ú–∞—Ç—á–∏</span>
            </TabsTrigger>
            <TabsTrigger value="events" className="flex items-center space-x-2">
              <Icon name="Calendar" size={16} />
              <span>–°–æ–±—ã—Ç–∏—è</span>
            </TabsTrigger>
            <TabsTrigger value="profile" className="flex items-center space-x-2">
              <Icon name="User" size={16} />
              <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
            </TabsTrigger>
          </TabsList>

          {/* Discover Tab */}
          <TabsContent value="discover" className="mt-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {profiles.map((profile) => (
                <Card key={profile.id} className="group hover:shadow-lg transition-all duration-300 bg-white/80 backdrop-blur border-0 shadow-sm animate-fade-in">
                  <CardHeader className="relative pb-2">
                    <div className="relative">
                      <div className="w-full h-48 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-lg mb-4 flex items-center justify-center text-6xl">
                        {profile.name.charAt(0)}
                      </div>
                      {profile.verified && (
                        <Badge className="absolute top-2 right-2 bg-primary">
                          <Icon name="CheckCircle" size={12} className="mr-1" />
                          –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                        </Badge>
                      )}
                      {profile.online && (
                        <div className="absolute bottom-2 right-2 w-4 h-4 bg-green-500 rounded-full border-2 border-white"></div>
                      )}
                    </div>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">{profile.name}, {profile.age}</CardTitle>
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => toggleLike(profile.id)}
                        className={`${likes[profile.id] ? 'text-primary animate-heart-pulse' : 'text-muted-foreground'} hover:text-primary transition-colors`}
                      >
                        <Icon name="Heart" size={20} fill={likes[profile.id] ? 'currentColor' : 'none'} />
                      </Button>
                    </div>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <p className="text-sm text-muted-foreground mb-3">{profile.bio}</p>
                    <div className="flex items-center space-x-1 text-xs text-muted-foreground mb-3">
                      <Icon name="MapPin" size={12} />
                      <span>{profile.location}</span>
                    </div>
                    <div className="flex flex-wrap gap-1 mb-4">
                      {profile.interests.map((interest, idx) => (
                        <Badge key={idx} variant="secondary" className="text-xs">
                          {interest}
                        </Badge>
                      ))}
                    </div>
                    <div className="flex space-x-2">
                      <Button size="sm" className="flex-1">
                        <Icon name="MessageCircle" size={14} className="mr-1" />
                        –ù–∞–ø–∏—Å–∞—Ç—å
                      </Button>
                      <Button variant="outline" size="sm">
                        <Icon name="User" size={14} />
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Matches Tab */}
          <TabsContent value="matches" className="mt-6">
            <div className="max-w-2xl mx-auto">
              <Card className="bg-white/80 backdrop-blur border-0 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center space-x-2">
                    <Icon name="Heart" size={20} className="text-primary" />
                    <span>–í–∞—à–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {matches.map((match) => (
                      <div key={match.id} className="flex items-center justify-between p-4 rounded-lg bg-gradient-to-r from-primary/5 to-secondary/5 hover:from-primary/10 hover:to-secondary/10 transition-all duration-300">
                        <div className="flex items-center space-x-3">
                          <div className="w-12 h-12 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center text-white text-xl">
                            {match.avatar}
                          </div>
                          <div>
                            <h3 className="font-medium">{match.name}</h3>
                            <p className="text-sm text-muted-foreground">
                              {match.mutualLikes ? '–í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è' : '–ñ–¥–µ—Ç –æ—Ç–≤–µ—Ç–∞'}
                            </p>
                          </div>
                        </div>
                        <div className="flex space-x-2">
                          <Button size="sm" variant={match.mutualLikes ? 'default' : 'outline'}>
                            <Icon name="MessageCircle" size={14} />
                          </Button>
                          {match.mutualLikes && (
                            <div className="flex items-center text-primary">
                              <Icon name="Heart" size={16} fill="currentColor" />
                            </div>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* Events Tab */}
          <TabsContent value="events" className="mt-6">
            <div className="max-w-4xl mx-auto">
              <div className="mb-6 text-center">
                <h2 className="text-2xl font-bold mb-2">–õ–ì–ë–¢+ –°–æ–±—ã—Ç–∏—è</h2>
                <p className="text-muted-foreground">–í—Å—Ç—Ä–µ—á–∞–π—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏</p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {events.map((event) => (
                  <Card key={event.id} className="group hover:shadow-lg transition-all duration-300 bg-white/80 backdrop-blur border-0 shadow-sm">
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <Badge variant="secondary" className="mb-2">
                          {event.type}
                        </Badge>
                        <Button variant="ghost" size="sm">
                          <Icon name="Bookmark" size={16} />
                        </Button>
                      </div>
                      <CardTitle className="text-lg">{event.title}</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                          <Icon name="Calendar" size={16} />
                          <span>{event.date} –≤ {event.time}</span>
                        </div>
                        <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                          <Icon name="MapPin" size={16} />
                          <span>{event.location}</span>
                        </div>
                        <div className="flex items-center space-x-2 text-sm text-muted-foreground">
                          <Icon name="Users" size={16} />
                          <span>{event.attendees} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                        </div>
                        <Button className="w-full mt-4">
                          <Icon name="Plus" size={16} className="mr-2" />
                          –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </TabsContent>

          {/* Profile Tab */}
          <TabsContent value="profile" className="mt-6">
            <div className="max-w-2xl mx-auto">
              <Card className="bg-white/80 backdrop-blur border-0 shadow-sm">
                <CardHeader>
                  <div className="flex items-center space-x-4">
                    <div className="w-20 h-20 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center text-white text-2xl">
                      –Ø
                    </div>
                    <div className="flex-1">
                      <h2 className="text-2xl font-bold">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
                      <p className="text-muted-foreground">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ª—É—á—à–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π</p>
                    </div>
                    <Badge className="bg-primary">
                      <Icon name="CheckCircle" size={12} className="mr-1" />
                      –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent className="space-y-6">
                  <div>
                    <h3 className="font-medium mb-3">–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è</h3>
                    <Progress value={85} className="mb-2" />
                    <p className="text-sm text-muted-foreground">85% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                  </div>

                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-medium">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å</h4>
                        <p className="text-sm text-muted-foreground">–î—Ä—É–≥–∏–µ —É–≤–∏–¥—è—Ç, –∫–æ–≥–¥–∞ –≤—ã –≤ —Å–µ—Ç–∏</p>
                      </div>
                      <Switch defaultChecked />
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-medium">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º</h4>
                        <p className="text-sm text-muted-foreground">–°–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç –ø–æ–∏—Å–∫–∞</p>
                      </div>
                      <Switch />
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-medium">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö</h4>
                        <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –õ–ì–ë–¢+ —Å–æ–±—ã—Ç–∏—è—Ö</p>
                      </div>
                      <Switch defaultChecked />
                    </div>
                  </div>

                  <div className="flex space-x-3">
                    <Button className="flex-1">
                      <Icon name="Edit" size={16} className="mr-2" />
                      –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                    <Button variant="outline">
                      <Icon name="Settings" size={16} />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Index;